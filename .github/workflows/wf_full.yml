#
# Build and test
#
on:
  workflow_call:
    inputs:
      DEPS_CACHE_KEY:
        description: "Cache key for the dependencies."
        default: ""
        required: true
        type: string
      PROFILE:
        description: "Profile used to build."
        default: "dev"
        required: false
        type: string

# Restrict permissions of GITHUB_TOKEN
# Access to scopes not specified is set to "none"
permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  cargo-build-1:
    uses: polarlabs/factory/.github/workflows/cargo-build-cache.yml@v/4.0.0
    with:
      DEPS_CACHE_KEY: ${{ inputs.DEPS_CACHE_KEY }}
      PROFILE: ${{ inputs.PROFILE }}

  cargo-test:
    uses: polarlabs/factory/.github/workflows/cargo-test.yml@v/4.0.0
    needs: [ cargo-build-1 ]
    with:
      DEPS_CACHE_KEY: ${{ inputs.DEPS_CACHE_KEY }}
      BUILD_CACHE_KEY: ${{ needs.cargo-build-1.outputs.CACHE_KEY }}
      PROFILE: ${{ inputs.PROFILE }}

  tag-ref-as-build:
    uses: polarlabs/factory/.github/workflows/tag-ref-as-build.yml@v/4.0.0
    needs: [ cargo-test ]

  cargo-build-2:
    runs-on: ubuntu-latest
    needs: [ tag-ref-as-build ]

    env:
      BUILD_NUMBER: ${{ needs.tag-ref-as-build.outputs.BUILD_NUMBER }}
      CACHE_KEY_PREFIX: "cargo-build_cache"
      CARGO_BUILD_OPTIONS: "--frozen --profile ${{ inputs.PROFILE }}"
      CARGO_TERM_COLOR: "always"

    # Map step outputs to job outputs.
    outputs:
      CACHE_KEY: ${{ steps.set-output.outputs.CACHE_KEY }}

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Restore dependency cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/
          key: ${{ inputs.DEPS_CACHE_KEY }}
          fail-on-cache-miss: true

      - name: Set environment (stage 1)
        run: |
          echo "RUNNER_OS="$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]' )"" >> $GITHUB_ENV
          echo "HASH="${{ hashFiles('Cargo.lock') }}"" >> $GITHUB_ENV

      - name: Set environment (stage 2)
        run: |
          echo "CACHE_KEY=${{ env.CACHE_KEY_PREFIX }}-${{ inputs.PROFILE }}-${{ env.RUNNER_OS }}-${{ env.HASH }}-build.${{ env.BUILD_NUMBER }}" >> $GITHUB_ENV

      - name: Provide build cache
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: ${{ env.CACHE_KEY }}

      - name: Build crate - profile ${{ inputs.PROFILE }}
        run: |
          cargo build ${{ env.CARGO_BUILD_OPTIONS }}

      - name: Set output
        id: set-output
        run: |
          echo "::notice title=CACHE_KEY::âœ… CACHE_KEY: ${{ env.CACHE_KEY }} ."
          echo "CACHE_KEY=${{ env.CACHE_KEY }}" >> $GITHUB_OUTPUT

  upload-artifact:
    uses: polarlabs/kodiak-web-server/.github/workflows/fn_pack-upload-artifact.yml@main
    needs: [ cargo-build-2, cargo-test ]
    with:
      BUILD_CACHE_KEY: ${{ needs.cargo-build-2.outputs.CACHE_KEY }}
      PROFILE: ${{ inputs.PROFILE }}
    secrets: inherit

  publish-image:
    uses: polarlabs/kodiak-web-server/.github/workflows/fn_build-push-docker-image.yml@main
    needs: [ upload-artifact ]
    with:
      ARTIFACT_NAME: ${{ needs.upload-artifact.outputs.ARTIFACT_NAME }}
      PROFILE: ${{ inputs.PROFILE }}
    secrets: inherit
